name: build-test

permissions:
  contents: write

on:
  push:
    branches: [ master]
    tags: [ "*" ]
    paths-ignore: [ "*.md" ]

  pull_request:
    branches: [ master ]

jobs:

  build-matrix:
    name: ${{ github.workflow }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest, buildjet-2vcpu-ubuntu-2204-arm]
        os: [ubuntu-latest, macos-latest]
        include:
##          - os: windows-latest
##            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx

    env:
      _BUILDS_: ${{ github.workspace }}/builds
      _RELEASE_: ${{ github.workspace }}/builds/ninja-multi-vcpkg/Release
      _DEBUG_: ${{ github.workspace }}/builds/ninja-multi-vcpkg/Debug
      _EXE_: ${{ matrix.os == 'windows-latest' && 'NosoWalletCPP.exe' || 'NosoWalletCPP' }}
      _BINARY_: ${{ matrix.os == 'windows-latest' && format('NosoWalletCPP-{0}.exe', matrix.triplet) || format('NosoWalletCPP-{0}', matrix.triplet) }}

    steps:
      - name: Install some needed packages on Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          sudo apt update && \
          sudo apt install -y \
            autoconf-archive \
            libdbus-1-dev \
            libxtst-dev \
            libxi-dev \
            libxrandr-dev \
            libbotan-2-dev

      - name: Install some needed packages on macOS
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash
        run: |
          brew install \
            autoconf-archive \
            automake

      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Restore from cache and setup vcpkg executable and data files.
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Run CMake+vcpkg+Ninja+CTest to build packages and generate/build/test the code.
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-vcpkg-release'
#          testPreset: 'test-release'

      - name: Moving and renaming executable
        shell: bash
        run: |
          mv "${{ env._RELEASE_ }}/${{ env._EXE_ }}" \
             "${{ env._BUILDS_ }}/${{ env._BINARY_ }}"
          file "${{ env._BUILDS_ }}/${{ env._BINARY_ }}" 

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: NosoWalletCPP
          path: ${{ env._BUILDS_ }}/${{ env._BINARY_ }}

  package-release:
    if: contains(github.ref, '/tags/')

    name: Package and create GitHub Release
    runs-on: ubuntu-latest
    needs: build-matrix

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

    - name: Download the Release binary
      uses: actions/download-artifact@v3

    - name: List files
      run: ls -alF NosoWalletCPP

    - name: Modifying release files
      run: chmod +x NosoWalletCPP/NosoWalletCPP-x64-linux NosoWalletCPP/NosoWalletCPP-x64-osx

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        name: NosoWalletCPP ${{ steps.vars.outputs.tag }}
        body_path: release-notes.md
        files: NosoWalletCPP/NosoWalletCPP*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
